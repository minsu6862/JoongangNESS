**** 리액트 프론트 엔드 +  스프링부트 백엔드 통합 배포 ****

1) 리액트 소스 중 .git 폴더와 .gitignore 파일과 node_modules 폴더를 제외한 파일과 폴더를 스프링부트 프로젝트 내 src/main 내에 frontend 폴더를 생성한 후 복사하기


2) 스프링부트의 .gitignore 파일을 편집기에서 불러온 후 아래 소스를 추가->불필요한 리액트 라이브러리가 깃허브에 업로드 되는것을 방지

### React JS ###
# dependencies
src/main/frontend/node_modules
src/main/frontend/.pnp
src/main/frontend/.pnp.js

# testing
src/main/frontend/coverage

# production
src/main/frontend/build

# misc
src/main/frontend/.DS_Store
src/main/frontend/.env.local
src/main/frontend/.env.development.local
src/main/frontend/.env.test.local
src/main/frontend/.env.production.local

src/main/frontend/npm-debug.log*
src/main/frontend/yarn-debug.log*
src/main/frontend/yarn-error.log*


3) React 빌드 코드 스프링부트의 build.gradle 에 추가

1] React 빌드용 라이브러리 플러그인 추가
plugins 에 
id 'com.github.node-gradle.node' version '7.1.0'
추가


4] npm install 실행 작업 정의

tasks.register("npmCustomInstall", com.github.gradle.node.npm.task.NpmTask) {
   workingDir = file(frontendDir)
   args = ["install"]
}


5] npm run build 실행 작업 정의
- npum run bulid 명령을 실행해서 React 빌드 결과물 build 폴더로 생성

tasks.register("npmBuild", com.github.gradle.node.npm.task.NpmTask) {
   dependsOn("npmInstall")
   workingDir = file(frontendDir)
   args = ["run", "build"]
}


6] React 빌드 결과를 Spring Boot로 복사

tasks.register("copyFrontend", Copy) {
   dependsOn("npmBuild")
   from("$frontendDir/build")
   into("$projectDir/src/main/resources/static")
}


7] Srping boot 빌드 시 React 빌드도 함께 빌드되도록 자동 실행

tasks.named("processResources") {
   dependsOn("copyFrontend")
}

7.1] 참고 Spring Boot 빌드 전에 React 빌드를 먼저 실행


8] bulid.gradle 을 ctrl+s 저장한 후 build.gradle을 reflash 해서 빌드 시 에러 여부 확인->에러 발생 시 버전 이나 오타 등 확인


9] 스프링부트 프로젝트 내 application.properties 아래 코드 추가
- React 라우터 지원용 코드

spring.web.resources.static-locations=classpath:/public/,classpath:/static/

spring.mvc.view.prefix=/
spring.mvc.view.suffix=.html
spring.web.resources.add-mappings=true


10] 스프링부트에 리액트 경로 설정용 Controller 추가
- React 라우팅 요청이 깨지지 않게 해주는 설정

@Controller
public class WebController {
   
   @RequestMapping(value = { "/", "/{path:^(?!api$).*$}/**" })
    public String forward() {
        return "forward:/index.html";
    }

}


10] 부가설명->컨트롤러 가 없으면 리액트 라우터 요청이 동작 안함
//api요청->스프링 부트 요청 적용
   //api요청을 제외한 요청 React 라우터 요청으로 변경->리액트의 "/"로 시작하는 요청으로 변경


11] cmd 창을 (관리자 권한으로) 실행한 후 해당 스프링부트 프로젝트에 루트 폴더로 이동


12] 스프링부트 build 명령 입력

gradlew clean build

빌드 후 build -> libs로 이동 후 plain이 아닌 jar 파일 실행

java -jar 파일이름.jar





